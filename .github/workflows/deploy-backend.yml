name: Deploy Backend to Cloudflare Workers

on:
  push:
    branches: [main, production, staging]
    paths:
      - 'backend/**'
      - '.github/workflows/deploy-backend.yml'
  pull_request:
    branches: [main, production, staging]
    paths:
      - 'backend/**'
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: true
        default: 'staging'
        type: choice
        options:
          - production
          - staging

jobs:
  deploy-backend:
    name: Deploy Backend
    runs-on: ubuntu-latest
    
    # 设置环境变量
    env:
      ENVIRONMENT: ${{ github.ref == 'refs/heads/main' && 'production' || 'staging' }}
      CF_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
      CF_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20.x'
          cache: 'npm'
          cache-dependency-path: 'backend/package-lock.json'

      - name: Install dependencies
        run: npm ci
        working-directory: ./backend

      - name: Build
        run: npm run build
        working-directory: ./backend

      - name: Configure Wrangler
        run: |
          # 安装最新版 Wrangler
          npm install -g wrangler@latest
          
          # 打印版本信息
          echo "=== Wrangler 版本信息 ==="
          wrangler --version
          
          # 打印环境变量（调试用）
          echo "=== 环境变量 ==="
          echo "ENVIRONMENT: $ENVIRONMENT"
          echo "CLOUDFLARE_ACCOUNT_ID: ${CLOUDFLARE_ACCOUNT_ID:0:4}...${CLOUDFLARE_ACCOUNT_ID: -4}"
          echo "CLOUDFLARE_API_TOKEN: ${CLOUDFLARE_API_TOKEN:0:4}...${CLOUDFLARE_API_TOKEN: -4}"
          
          # 验证环境变量
          if [ -z "$CLOUDFLARE_API_TOKEN" ] || [ -z "$CLOUDFLARE_ACCOUNT_ID" ]; then
            echo "错误: 缺少必要的 Cloudflare 凭据"
            echo "CLOUDFLARE_API_TOKEN 已设置: $([ -n "$CLOUDFLARE_API_TOKEN" ] && echo "是" || echo "否")"
            echo "CLOUDFLARE_ACCOUNT_ID 已设置: $([ -n "$CLOUDFLARE_ACCOUNT_ID" ] && echo "是" || echo "否")"
            exit 1
          fi
          
          # 测试 Wrangler 认证
          echo "=== 测试 Wrangler 认证 ==="
          wrangler whoami || {
            echo "错误: Wrangler 认证失败"
            exit 1
          }

      - name: Deploy to Cloudflare Workers (${{ env.ENVIRONMENT }})
        uses: cloudflare/wrangler-action@3.0.0
        with:
          apiToken: ${{ secrets.CF_API_TOKEN }}
          command: publish --env ${{ env.ENVIRONMENT }} --verbose
          workingDirectory: './backend'
        env:
          NODE_ENV: ${{ env.ENVIRONMENT }}
          # 设置 Cloudflare 环境变量
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CF_ACCOUNT_ID }}
          CLOUDFLARE_API_TOKEN: ${{ secrets.CF_API_TOKEN }}
          # 设置应用特定的环境变量
          IPREGISTRY_API_KEY: ${{ secrets.IPREGISTRY_API_KEY }}
          TURNSTILE_SECRET_KEY: ${{ secrets.TURNSTILE_SECRET_KEY }}

      - name: Verify deployment
        run: |
          echo "Successfully deployed to ${{ env.ENVIRONMENT }} environment"
          echo "Deployment URL: https://${{ env.ENVIRONMENT == 'production' && 'api.ispinfo.io' || 'staging.api.ispinfo.io' }}"

      # 添加部署状态通知（可选，需要设置 SLACK_WEBHOOK_URL 密钥）
      - name: Notify deployment status
        if: always() && github.event_name != 'workflow_dispatch'  # 手动触发时不发送通知
        uses: rtCamp/action-slack-notify@v2.2.0
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_URL || '' }}
          SLACK_TITLE: 'Backend Deployment ${{ job.status }} [${{ env.ENVIRONMENT }}]'
          SLACK_MESSAGE: >
            ${{ format('Repository: {0}\nBranch: {1}\nEvent: {2}\nStatus: {3}', 
                      github.repository,
                      github.ref_name,
                      github.event_name,
                      format('{0} {1}', 
                             job.status == 'success' && '✅' || '❌',
                             job.status == 'success' && 'Succeeded' || 'Failed')) }}
          SLACK_COLOR: ${{ job.status == 'success' && 'good' || 'danger' }}
          SLACK_USERNAME: GitHub Actions
          SLACK_ICON_EMOJI: ':github:'
